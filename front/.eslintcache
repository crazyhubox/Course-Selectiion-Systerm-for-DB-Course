[{"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/index.tsx":"1","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reportWebVitals.ts":"2","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/App.tsx":"3","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reducer/store.tsx":"4","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/global.ts":"5","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reducer/reducer.ts":"6","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/authorcheck/AuthorCheck.tsx":"7","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/login.tsx":"8","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/testData.ts":"9","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/index.tsx":"10","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Admin/index.tsx":"11","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Admin/Maintain/index.tsx":"12","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Admin/Graph/index.tsx":"13","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/GradeDetail/index.tsx":"14","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reducer/effect.tsx":"15","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/studentInfo.tsx":"16","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/gradeTable.tsx":"17","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/courseList.tsx":"18","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/courseTable.tsx":"19"},{"size":871,"mtime":1614149741000,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1613631154000,"results":"22","hashOfConfig":"21"},{"size":2226,"mtime":1613813659000,"results":"23","hashOfConfig":"21"},{"size":160,"mtime":1614149722000,"results":"24","hashOfConfig":"21"},{"size":4197,"mtime":1614184702000,"results":"25","hashOfConfig":"21"},{"size":5169,"mtime":1614188606000,"results":"26","hashOfConfig":"21"},{"size":1102,"mtime":1613787991000,"results":"27","hashOfConfig":"21"},{"size":3426,"mtime":1614272246000,"results":"28","hashOfConfig":"21"},{"size":4810,"mtime":1614126671000,"results":"29","hashOfConfig":"21"},{"size":2144,"mtime":1614167338000,"results":"30","hashOfConfig":"21"},{"size":6757,"mtime":1614167933000,"results":"31","hashOfConfig":"21"},{"size":13182,"mtime":1614168564000,"results":"32","hashOfConfig":"21"},{"size":1255,"mtime":1613817456000,"results":"33","hashOfConfig":"21"},{"size":1533,"mtime":1613809154000,"results":"34","hashOfConfig":"21"},{"size":8387,"mtime":1614949944134,"results":"35","hashOfConfig":"21"},{"size":1038,"mtime":1613631154000,"results":"36","hashOfConfig":"21"},{"size":1233,"mtime":1613808220000,"results":"37","hashOfConfig":"21"},{"size":2709,"mtime":1614167404000,"results":"38","hashOfConfig":"21"},{"size":1922,"mtime":1614949944134,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"18vsqsz",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/index.tsx",["82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport './css/index.css';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './reducer/store';\n\n\nlet mapStatesToProps = (state: any) => {\n  return {\n    States: state,\n    user: state.user,\n  }\n}\nlet AppContainer = connect(mapStatesToProps)(App)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["83","84"],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reportWebVitals.ts",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/App.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reducer/store.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/global.ts",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reducer/reducer.ts",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/authorcheck/AuthorCheck.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/login.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/testData.ts",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/index.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Admin/index.tsx",["85"],"import React, { useState } from 'react';\r\nimport { CourseWithStudents, myClone, Student } from '../../global';\r\nimport { Select, Card, Table, Button, Input } from 'antd'\r\nimport { SelectValue } from 'antd/lib/select';\r\nimport { AnyAction } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport EffectDispatch from '../../reducer/effect';\r\n\r\n\r\n\r\n\r\nconst { Option } = Select\r\n\r\ninterface props {\r\n    courseInfo: CourseWithStudents[],\r\n    dispatch: (arg: AnyAction) => void\r\n}\r\n\r\n\r\nfunction Admin(props: props) {\r\n\r\n\r\n\r\n    // useState\r\n    let temp = {\r\n        course: {\r\n            cno: '请选择课程',\r\n            cname: '请选择课程',\r\n            credit: 0,\r\n            cdept: '请选择课程',\r\n            tname: '请选择课程'\r\n        },\r\n        students: []\r\n    } as unknown\r\n    const [currentCourse, setCurrentCourse] = useState<CourseWithStudents>((temp as CourseWithStudents))\r\n    const [editFlag, setEditFlag] = useState(false)\r\n    const [editButtonText, setEditButtonText] = useState(\"录入成绩\")\r\n\r\n\r\n\r\n\r\n    // data process\r\n    let dataSource_StudentsTable: any[] | undefined = []\r\n    if (currentCourse !== undefined)\r\n        dataSource_StudentsTable = currentCourse.students.map((item) => (\r\n            {\r\n                sno: item.sno,\r\n                sname: item.sname,\r\n\r\n                // 为每个单元格准备 key\r\n                key2: (item.sno + \"-2\"),\r\n                key3: (item.sno + \"-3\"),\r\n\r\n                // 可修改的 grade 单元格\r\n                grade: (\r\n                    <Input\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                        disabled={!editFlag}\r\n                        value={item.grade}\r\n                        maxLength={2}\r\n                        onChange={\r\n                            (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n                                // 修改curentCourse的数据\r\n                                let tempCurse: CourseWithStudents = myClone(currentCourse)\r\n                                // tempCurse\r\n                                tempCurse.students.forEach((stuItem) => {\r\n                                    if (stuItem.sno === item.sno) {\r\n                                        let num = Number(event.target.value)\r\n                                        if (!isNaN(num)) {\r\n                                            stuItem.grade = num\r\n                                        }\r\n                                    }\r\n                                })\r\n                                setCurrentCourse(tempCurse)\r\n                            }\r\n                        }\r\n                    />\r\n                )\r\n            }\r\n        ))\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '学号',\r\n            dataIndex: 'sno',\r\n            key: 'sno',\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'sname',\r\n            key: 'key2'\r\n        },\r\n        {\r\n            title: '成绩',\r\n            dataIndex: 'grade',\r\n            key: 'key3'\r\n\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    // evnt handler\r\n    function handleCourseSelectorOnChange(value: SelectValue) {\r\n        props.courseInfo.forEach((item) => {\r\n            if (item.course.cname === value) (\r\n                setCurrentCourse(item)\r\n            )\r\n        })\r\n    }\r\n\r\n    function handleEditButtonOnClick(e: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n\r\n        if (editFlag) {\r\n            setEditFlag(false)\r\n            setEditButtonText(\"录入成绩\")\r\n            // 将 State 同步到 props\r\n            const action = {\r\n                type: 'fixGrade',\r\n                courseEdited: currentCourse\r\n            }\r\n            // props.dispatch(action)\r\n            EffectDispatch(action)\r\n        } else {\r\n            setEditFlag(true)\r\n            setEditButtonText(\"完成录入\")\r\n        }\r\n    }\r\n\r\n    function handleMaintainButtonClick() {\r\n        let link = document.getElementById('to/admin/maintain')\r\n        link?.click()\r\n    }\r\n\r\n    function handleGraphButtonClick() {\r\n        let link = document.getElementById('to/admin/graph')\r\n        link?.click()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>管理员页面</h1>\r\n            {/* 课程选择按钮 */}\r\n            <Select\r\n                placeholder=\"请选择课程\"\r\n                style={{ width: 200 }}\r\n                onChange={handleCourseSelectorOnChange}\r\n            >\r\n                {props.courseInfo.map((courseWithStudent) => (\r\n                    <Option\r\n                        key={courseWithStudent.course.cname}\r\n                        value={courseWithStudent.course.cname}>\r\n                        {courseWithStudent.course.cname}\r\n                    </Option>\r\n                ))}\r\n            </Select>\r\n            {/* 成绩分布 */}\r\n            {/* 成绩修改（锁）信息维护按钮 成绩分布按钮 */}\r\n            <span>\r\n                <Button\r\n                    onClick={handleEditButtonOnClick} >\r\n                    {editButtonText}\r\n                </Button>\r\n                <Button disabled={editFlag}\r\n                    onClick={handleMaintainButtonClick} >\r\n                    信息维护\r\n                </Button>\r\n                <Button disabled={editFlag}\r\n                    onClick={handleGraphButtonClick}>\r\n                    成绩分布\r\n                </Button>\r\n            </span>\r\n\r\n\r\n            {/* 课程信息 */}\r\n            <div id=\"CourseBasicInfo\">\r\n                <Card title=\"课程信息\">\r\n                    <Card.Grid style={{\r\n                        width: '50%',\r\n                        textAlign: 'center'\r\n                    }}\r\n                        hoverable={false}>\r\n                        <span>课程名称: </span>\r\n                        <span>{currentCourse.course.cname}</span>\r\n                    </Card.Grid>\r\n                    <Card.Grid style={{\r\n                        width: '50%',\r\n                        textAlign: 'center'\r\n                    }}\r\n                        hoverable={false}>\r\n                        <span>任课老师: </span>\r\n                        <span>{currentCourse.course.tname}</span>\r\n                    </Card.Grid>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* 学生 成绩 列表 */}\r\n            <Table dataSource={dataSource_StudentsTable}\r\n                columns={columns}>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// connect to redux\r\nlet AdminContainer = connect(\r\n    (state: any) => {\r\n        return ({\r\n            courseInfo: state.courseInfo,\r\n        })\r\n    }\r\n)(Admin)\r\n\r\n\r\n\r\nexport default AdminContainer \r\n","/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Admin/Maintain/index.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Admin/Graph/index.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/GradeDetail/index.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/reducer/effect.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/studentInfo.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/gradeTable.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/courseList.tsx",[],"/Users/tomjack/Desktop/code/Course-Selectiion-Systerm-for-DB-Course/front/src/pages/Profile/courseTable.tsx",["86"],"import { Button, Table } from \"antd\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport { log } from \"console\";\r\nimport React, { ReactText, useState } from \"react\";\r\nimport { Course } from \"../../global\";\r\n\r\n\r\n// 内部小组件\r\nfunction CourseTable(props: any) {\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\r\n\r\n\r\n    // 定义表格格式\r\n    const columns: ColumnsType<Course> = [\r\n        {\r\n            title: '课号',\r\n            dataIndex: 'cno',\r\n        },\r\n        {\r\n            title: '  课 名  ',\r\n            dataIndex: 'cname',\r\n        },\r\n        {\r\n            title: '学分',\r\n            dataIndex: 'credit',\r\n        },\r\n        {\r\n            title: '院系',\r\n            dataIndex: 'cdept',\r\n        },\r\n        {\r\n            title: '任课老师',\r\n            dataIndex: 'tname',\r\n        },\r\n    ];\r\n\r\n\r\n    // 处理按钮选择\r\n    const onSelectChange = (selectedRowKeys: ReactText[]) => {\r\n        setSelectedRowKeys(selectedRowKeys)\r\n    }\r\n\r\n\r\n    //  定义表格初始选择数组以及回调函数\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n    };\r\n\r\n\r\n    // 处理 confirm 按钮点击事件\r\n    const onConfirm = () => {        \r\n        props.callback(props.confirm, selectedRowKeys)\r\n        onSelectChange([])\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"CourseTable\" >\r\n            <Table<Course> size='small' columns={columns}\r\n                rowSelection={rowSelection}\r\n                rowKey={record => record.cno}\r\n                footer={() => '共' + props.course.length + '门课'}\r\n                pagination={{\r\n                    size: \"small\",\r\n                    pageSize: 8\r\n                }}\r\n                dataSource={props.course} />\r\n            <Button onClick={onConfirm} >{props.confirm}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseTable",{"ruleId":"87","severity":1,"message":"88","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":21},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":2,"column":39,"nodeType":"89","messageId":"90","endLine":2,"endColumn":46},{"ruleId":"87","severity":1,"message":"96","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":13},"@typescript-eslint/no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'Student' is defined but never used.","'log' is defined but never used.","no-global-assign","no-unsafe-negation"]